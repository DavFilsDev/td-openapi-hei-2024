openapi: 3.0.0
info:
  title: Enhanced Product & Order API
  version: 1.0.0
  description: API with authentication, tags, and reusable components

# Security scheme definition
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
      description: Basic authentication using username and password

  schemas:
    Product:
      type: object
      properties:
        name:
          type: string
          example: "Wireless Headphones"
        expiration_datetime:
          type: string
          format: date-time
          example: "2025-12-31T23:59:59Z"
        price:
          type: number
          format: float
          minimum: 0
          example: 129.99
      required:
        - name
        - expiration_datetime
        - price

    Order:
      type: object
      properties:
        identifier:
          type: integer
          format: int64
          example: 1001
        customer_name:
          type: string
          example: "John Doe"
        creation_datetime:
          type: string
          format: date-time
          example: "2024-08-24T14:30:00Z"
        total_amount:
          type: number
          format: float
          minimum: 0
          example: 199.97
      required:
        - identifier
        - customer_name
        - creation_datetime
        - total_amount

    CreateOrder:
      type: object
      properties:
        customer_name:
          type: string
          example: "Jane Smith"
        product_ids:
          type: array
          items:
            type: integer
          example: [1, 2, 3]
      required:
        - customer_name
        - product_ids

  parameters:
    page:
      name: page
      in: query
      description: Page number for pagination
      required: false
      schema:
        type: integer
        minimum: 1
        default: 1
      example: 1
    size:
      name: size
      in: query
      description: Number of items per page
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
      example: 10

# Paths with tags and security
paths:
  /products:
    get:
      tags:
        - Products
      summary: Get list of products
      description: Returns a paginated list of products
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
              examples:
                products-example:
                  value:
                    - name: "Laptop"
                      expiration_datetime: "2026-01-01T00:00:00Z"
                      price: 999.99
                    - name: "Mouse"
                      expiration_datetime: "2025-06-15T12:00:00Z"
                      price: 25.50

  /orders:
    get:
      tags:
        - Orders
      summary: Get paginated list of orders
      description: Returns a paginated list of all orders
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
              examples:
                orders-example:
                  value:
                    - identifier: 1001
                      customer_name: "John Doe"
                      creation_datetime: "2024-08-24T10:30:00Z"
                      total_amount: 149.99
                    - identifier: 1002
                      customer_name: "Alice Johnson"
                      creation_datetime: "2024-08-24T11:15:00Z"
                      total_amount: 299.99

    post:
      tags:
        - Orders
      summary: Create a new order
      description: Create a new order (requires authentication)
      security:
        - BasicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrder'
            examples:
              create-order-example:
                value:
                  customer_name: "Bob Wilson"
                  product_ids: [1, 3, 5]
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
              examples:
                created-order-example:
                  value:
                    identifier: 1003
                    customer_name: "Bob Wilson"
                    creation_datetime: "2024-08-24T15:45:00Z"
                    total_amount: 450.00
        '401':
          description: Unauthorized - authentication required
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
              examples:
                unauthorized-example:
                  value:
                    error: "Authentication credentials required"