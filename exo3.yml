openapi: 3.0.0
info:
  title: Task Management API
  version: 1.0.0
  description: API for managing tasks with CRUD operations

paths:
  /tasks:
    get:
      summary: Get all tasks
      description: Returns a list of all tasks.
      responses:
        '200':
          description: A list of tasks.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '404':
          description: No tasks found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                not-found:
                  value:
                    error: "No tasks found"

    post:
      summary: Create new tasks
      description: Creates one or more new tasks.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateTask'
            examples:
              multiple-tasks:
                value:
                  - title: "Buy groceries"
                    completed: false
                  - title: "Write report"
                    completed: true
      responses:
        '201':
          description: Tasks created successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'

    delete:
      summary: Delete multiple tasks
      description: Deletes tasks based on provided IDs.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
            examples:
              task-ids:
                value: [1, 2, 3]
      responses:
        '200':
          description: Tasks deleted successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'

  /tasks/{id}:
    get:
      summary: Get a specific task
      description: Returns a task by its ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The task ID
      responses:
        '200':
          description: Task found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                task-not-found:
                  value:
                    error: "Task not found"

    delete:
      summary: Delete a specific task
      description: Deletes a task by its ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The task ID
      responses:
        '200':
          description: Task deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                task-not-found:
                  value:
                    error: "Task not found"

components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier of the task
        title:
          type: string
          description: The title of the task
        completed:
          type: boolean
          description: The completion status of the task
      required:
        - id
        - title
        - completed

    CreateTask:
      type: object
      properties:
        title:
          type: string
          description: The title of the task
        completed:
          type: boolean
          description: The completion status of the task
      required:
        - title
        - completed

    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
      required:
        - error